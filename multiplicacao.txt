# multiplicacao.txt
# Calcula A := A * B. B é restaurado. C e D são zerados.
# Utiliza C, D e E como auxiliares.
# Iniciar com valores em A e B. C, D, E devem ser 0.

# Se A ou B for 0, o resultado é 0. Pula para rotina de zerar A.
1: ZER A 40 2
2: ZER B 40 3

# Passo 1: Mover A (multiplicando) para C. A se torna o acumulador (zerado).
3: ZER A 5 4
4: SUB A 3
   ADD C 3  # Erro na descrição original, corrigido para o formato da máquina
# Correção da lógica de movimentação:
# 3: ZER A 10 4  (Se A for 0, pule para o loop principal)
# 4: SUB A 5
# 5: ADD C 3     (Move A para C)

# Refatorado para clareza:
# Move A para C
3: ZER A 10 4
4: SUB A 5
5: ADD C 3

# Passo 2: Loop principal (executa B vezes)
# D será usado para salvar e restaurar B.
10: ZER B 20 11   # Se B for 0, a multiplicação terminou. Pule para restaurar B.
11: SUB B 12
12: ADD D 13      # Copia B para D

# Passo 3: Adicionar C em A, preservando C.
# Usa E como registrador temporário. Move C para E.
13: ZER C 16 14
14: SUB C 15
15: ADD E 13

# Adiciona E em A e, ao mesmo tempo, restaura C.
16: ZER E 10 17   # Se E (cópia de C) for 0, a adição terminou. Volta ao loop principal.
17: SUB E 18
18: ADD A 19      # Acumula em A
19: ADD C 16      # Restaura C

# Passo 4: Restaurar B e zerar os auxiliares
# Restaura B de D
20: ZER D 30 21
21: SUB D 22
22: ADD B 20

# Zera C
30: ZER C 40 31
31: SUB C 30

# Zera D (já deve ser 0)
40: ZER D 99 41   # Zera D e encerra.
41: SUB D 40

# Se A ou B eram 0 inicialmente
50: ZER A 99 51   # Se A não for 0, zere-o.
51: SUB A 50