# fatorial.txt (VERSÃO 3 - A CORRETA)
# Calcula Fatorial(A) e armazena o resultado em B.

# --- ETAPA 1: CASOS BASE E INICIALIZAÇÃO ---
# Se A=0, o resultado é 1.
1: ZER A 100 2
# Se A=1, o resultado também é 1.
2: SUB A 3
3: ZER A 100 4
# Se A > 1, restaura A e inicializa B com 1.
4: ADD A 5
5: ADD B 10

# --- ETAPA 2: LOOP PRINCIPAL DO FATORIAL ---
# Ponto de controle: Verifica se A é 1. Se for, o cálculo terminou.
10: SUB A 11
11: ZER A 99 12
# Se A não era 1, restaura seu valor e vai para a multiplicação
12: ADD A 20

# --- ETAPA 3: MULTIPLICAÇÃO B := B * A (preserva A) ---
# Esta rotina é crucial. Ela multiplica B por A, mas garante
# que o valor de A não seja perdido no processo.
# C = B_original, D = A_cópia, E = auxiliar de soma, B = acumulador
20: ZER B 30 21
21: SUB B 22
22: ADD C 20
30: ZER A 40 31
31: SUB A 32
32: ADD D 30
# Loop da multiplicação. A cada SUB D, fazemos um ADD A para restaurá-lo.
40: ZER D 60 41
41: SUB D 42
42: ADD A 43
# Adicionar C em B, usando E como auxiliar para preservar C.
43: ZER C 50 44
44: SUB C 45
45: ADD E 43
50: ZER E 40 51
51: SUB E 52
52: ADD B 53
53: ADD C 50

# --- ETAPA 4: DECREMENTO PERMANENTE E REPETIÇÃO ---
# A multiplicação terminou. A foi restaurado. B tem o novo produto.
# Limpa C e D, e DECREMENTA A permanentemente antes de voltar ao loop.
60: ZER C 70 61
61: SUB C 60
70: ZER D 80 71
71: SUB D 70
# Agora sim, o decremento final antes de repetir.
80: SUB A 10

# --- ROTINAS DE FINALIZAÇÃO ---
# Rótulo para pular quando A=0 ou A=1 inicialmente. Faz B=1 e para.
100: ADD B 99

# Rótulo 99 é o ponto de parada (não existe, então encerra).